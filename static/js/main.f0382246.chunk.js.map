{"version":3,"sources":["components/TodoItem.module.css","components/Header.js","components/TodoItem.js","components/TodosList.js","components/InputTodo.js","pages/SinglePage.js","pages/About.js","pages/NotMatch.js","components/Navbar.js","components/TodoContainer.js","index.js"],"names":["module","exports","Header","style","padding","lineHeight","fontSize","fontWeight","marginBottom","color","textTransform","textAlign","TodoItem","props","useState","editing","setEditing","todo","completed","id","title","viewMode","editMode","display","useEffect","console","log","className","styles","item","onDoubleClick","type","checkbox","checked","onChange","handleChangeProps","onClick","deleteTodoProps","fontStyle","opacity","textDecoration","textInput","value","e","setUpdate","target","onKeyDown","event","key","TodosList","todos","map","InputTodo","inputText","setInputText","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","name","marginTop","SinglePage","slug","useParams","aboutContent","description","find","About","useRouteMatch","url","path","to","NotMatch","Navbar","navbarOpen","setNavbarOpen","prev","width","height","text","link","activeClassName","exact","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0382246.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__EiNWR\",\"checkbox\":\"TodoItem_checkbox__HTI3f\",\"textInput\":\"TodoItem_textInput__cdquX\"};","import React from \"react\"\n\nfunction Header() {\n    // equivalent to const Header = () => {}\n\n\tconst headerStyle = {\n\t\tpadding: \"20px 0\",\n\t\tlineHeight: \"1.5em\",\n\t}\n\n    return (\n        <header style={headerStyle}>\n            <h1 style={{\n\t\t\t\tfontSize: \"6rem\",\n\t\t\t\tfontWeight: \"600\",\n\t\t\t\tmarginBottom: \"2rem\",\n\t\t\t\tlineHeight: \"1em\",\n\t\t\t\tcolor: \"#ececec\",\n\t\t\t\ttextTransform: \"lowercase\",\n\t\t\t\ttextAlign: \"center\",\n\t\t\t}}>\n\t\t\t\ttodos\n\t\t\t</h1>\n        </header>\n    )\n}\n\nexport default Header","import React, { useState, useEffect } from \"react\"\nimport styles from \"./TodoItem.module.css\"\nimport { FaTrash } from \"react-icons/fa\"\n\nconst TodoItem = props => {\n\n    const [editing, setEditing] = useState(false)\n\n    const handleEditing = () => {\n        setEditing(true)\n    }\n\n    const handleUpdatedDone = event => {\n        if (event.key === \"Enter\") {\n            setEditing(false)\n        }\n    }\n\n    const { completed, id, title } = props.todo\n\n    const completedStyle = {\n        fontStyle: \"italic\",\n        color: \"#595959\",\n        opacity: 0.4,\n        textDecoration: \"line-through\"\n    }\n\n    let viewMode = {}\n    let editMode = {}\n\n    if (editing) {\n        viewMode.display = \"none\"\n    }\n    else {\n        editMode.display = \"none\"\n    }\n\n    useEffect(() => {\n        return () => {\n            console.log(\"Cleaning up...\")\n        }\n    }, [])\n\n    return (\n        <li className={styles.item}>\n            <div onDoubleClick={handleEditing} style={viewMode}>\n                <input\n                    type=\"checkbox\"\n                    className={styles.checkbox}\n                    checked={completed}\n                    onChange={() => props.handleChangeProps(id)}\n                />\n                <button onClick={() => props.deleteTodoProps(id)}>\n                    <FaTrash style={{ color: \"orangered\", fontSize: \"16px\" }}/>\n                </button>\n                <span style={completed ? completedStyle : null}>\n                    {title}\n                </span>\n            </div>\n            <input \n                type=\"text\" \n                style={editMode} \n                className={styles.textInput} \n                value={title} // default text\n                onChange={e => {\n                    this.props.setUpdate(e.target.value, id)\n                }}\n                onKeyDown={handleUpdatedDone}\n            />\n        </li>\n    )\n}\n\nexport default TodoItem","import React from \"react\"\nimport TodoItem from \"./TodoItem\"\n\nconst TodosList = props => {\n    return (\n        <ul>\n            {props.todos.map(todo => (\n                <TodoItem\n                    key={todo.id}\n                    todo={todo}\n                    handleChangeProps={props.handleChangeProps}\n                    deleteTodoProps={props.deleteTodoProps}\n                    setUpdate={props.setUpdate}\n                />\n            ))}\n        </ul>\n    )\n}\n\nexport default TodosList","import React, { useState } from \"react\"\nimport { FaPlusCircle } from \"react-icons/fa\"\n\nconst InputTodo = props => {\n    const [inputText, setInputText] = useState({\n        title: \"\",\n    })\n    // current state, function to change state\n\n    const onChange = e => {\n        setInputText({\n            ...inputText,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (inputText.title.trim()) {\n            props.addTodoProps(inputText.title)\n            setInputText({\n                title: \"\",\n            })\n        }\n        else {\n            alert(\"Please write item\")\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className=\"form-container\">\n            <input \n                type=\"text\"\n                className=\"input-text\"\n                placeholder=\"Add todo...\"\n                value={inputText.title}\n                name=\"title\"\n                onChange={onChange}\n            />\n            <button className=\"input-submit\">\n                <FaPlusCircle style={{ color: \"darkcyan\", fontSize: \"20px\", marginTop: \"2px\" }} />\n            </button>\n        </form>\n    )\n}\n\n\nexport default InputTodo","import React from \"react\"\nimport { useParams } from \"react-router-dom\"\n\nconst SinglePage = () => {\n    const aboutData = [\n        {\n            slug: \"about-app\",\n            title: \"About the App\",\n            description: \"In this app, you can add, delete, submit and edit items. To edit items, double-click on them. Once you are done, press enter.\"\n        },\n        {\n            slug: \"about-author\",\n            title: \"About the Author\",\n            description: \"ha. you thought.\"\n        }\n    ]\n    const { slug } = useParams()\n    const aboutContent = aboutData.find(item => item.slug === slug)\n    const { title, description } = aboutContent\n    return (\n        <div className=\"main__content\">\n            <h1>{title}</h1>\n            <p>{description}</p>\n        </div>\n    )\n}\n\nexport default SinglePage","import React from \"react\"\nimport { Link, useRouteMatch, Route } from \"react-router-dom\"\nimport SinglePage from \"./SinglePage\"\n\nconst About = () => {\n    const { url, path } = useRouteMatch()\n    return (\n        <div className=\"about__content\">\n            <ul className=\"about__list\">\n                <li>\n                    <Link to={`${url}/about-app`}>About App</Link>\n                </li>\n                <li>\n                    <Link to={`${url}/about-author`}>About Author</Link>\n                </li>\n            </ul>\n            <Route path={`${path}/:slug`}>\n                <SinglePage />\n            </Route>\n        </div>\n    )\n}\n\nexport default About","import React from \"react\"\n\nconst NotMatch = () => {\n    return (\n        <div>\n            <h3>No match for this page</h3>\n        </div>\n    )\n}\n\nexport default NotMatch","import React, { useState } from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { MdClose } from \"react-icons/md\"\nimport { FiMenu } from \"react-icons/fi\" \n\nconst Navbar = () => {\n    const [navbarOpen, setNavbarOpen] = useState(false)\n    const links = [\n        {\n            id: 1,\n            path: \"/\",\n            text: \"Home\"\n        },\n        {\n            id: 2,\n            path: \"/about\",\n            text: \"About\"\n        }\n    ]\n\n    const handleToggle = () => {\n        setNavbarOpen(prev => !prev)\n    }\n\n    const closeMenu = () => {\n        setNavbarOpen(false)\n    }\n\n    return (\n        <nav className=\"navBar\">\n            <button onClick={handleToggle}>{navbarOpen ? (<MdClose style={{ color: \"#fff\", width: \"40px\", height: \"40px\" }} />) : (<FiMenu style={{ color: \"#7b7b7b\", width: \"40px\", height: \"40px\" }} />)}</button>\n            <ul className={`menuNav ${navbarOpen ? \" showMenu\" : \"\"}`}>\n                {links.map(link => {\n                    return (\n                        <li key={link.id}>\n                            <NavLink \n                                to={link.path} \n                                activeClassName=\"active-link\" \n                                onClick={() => closeMenu()}\n                                exact\n                            >\n                                {link.text}\n                            </NavLink>\n                        </li>\n                    )\n                })}\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar","import React, { useState, useEffect } from \"react\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport { Route, Switch } from \"react-router-dom\"\nimport Header from \"./Header\"\nimport TodosList from \"./TodosList\"\nimport InputTodo from \"./InputTodo\"\nimport About from \"../pages/About\"\nimport NotMatch from \"../pages/NotMatch\"\nimport Navbar from \"./Navbar\"\n\n\nconst TodoContainer = () => {\n    const [todos, setTodos] = useState(getInitialTodos())\n    \n    useEffect(() => {\n        const temp = JSON.stringify(todos)\n        localStorage.setItem(\"todos\", temp)\n    }, [todos])\n\n    function getInitialTodos() {\n        const temp = localStorage.getItem(\"todos\")\n        const savedTodos = JSON.parse(temp)\n        return savedTodos || []\n    }\n    \n    const handleChange = id => {\n        setTodos(prevState => \n            prevState.map(todo => {\n                if (todo.id === id) {\n                    return {\n                        ...todo, // spread operator\n                        completed: !todo.completed,\n                    }\n                }\n                return todo\n            })\n        )\n    }\n\n    const delTodo = id => {\n        setTodos([\n            ...todos.filter(todo => {\n                return todo.id !== id;\n            })\n        ])\n    }\n\n    const addTodoItem = title => {\n        const newTodo = {\n            id: uuidv4(),\n            title: title,\n            completed: false\n        }\n        setTodos([...todos, newTodo]);\n    }\n\n    const setUpdate = (updatedTitle, id) => {\n        setTodos(\n            todos.map(todo => {\n                if (todo.id === id) {\n                    todo.title = updatedTitle\n                }\n                return todo\n            }),\n        )\n    }\n\n    return (\n        // define various properties/props that can be accessed elsewhere\n        <>\n            <Navbar />\n            <Switch>\n                <Route exact path=\"/\">\n                    <div className=\"container\">\n                        <div className=\"inner\">\n                            <Header />\n                            <InputTodo addTodoProps={addTodoItem}/>\n                            <TodosList \n                                todos={todos} \n                                handleChangeProps={handleChange}\n                                deleteTodoProps={delTodo}\n                                setUpdate={setUpdate}\n                            />\n                        </div>\n                    </div>\n                </Route>\n                <Route path=\"/about\">\n                    <About />\n                </Route>\n                <Route path=\"*\">\n                    <NotMatch />\n                </Route>\n            </Switch>\n        </>\n    )\n}\n\nexport default TodoContainer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\"\nimport TodoContainer from './components/TodoContainer';\nimport \"./App.css\"\n\nReactDOM.render(\n    // StrictMode for debugging?\n    <React.StrictMode>\n        <BrowserRouter>\n            <TodoContainer />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}